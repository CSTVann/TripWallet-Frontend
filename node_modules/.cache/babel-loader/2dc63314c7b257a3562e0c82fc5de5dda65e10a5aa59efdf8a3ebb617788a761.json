{"ast":null,"code":"\n\n// import React, { useState, useEffect, useContext, createContext } from 'react';\n// import Select from 'react-select'\n// import { useNavigate } from 'react-router-dom';\n\n// import $ from 'jquery'\n\n// import '../css/budget_analyzer.css';\n\n// var CONFIG = require('../conf.json')\n\n// const BudgetAnalyzer = () => {\n//     const navigate = useNavigate()\n\n//     const [selectCategories, setSelectCategories] = useState([]);\n//     const [selectLocations, setSelectLocations] = useState([]);\n\n//     const [categories, setCategories] = useState([]);\n//     const [locations, setLocations] = useState([]);\n//     const [minBudget, setMinBudget] = useState(0.00);\n//     const [maxBudget, setMaxBudget] = useState(0.00);\n\n//     function getLocations() {\n//         $.ajax({\n//             url: `${CONFIG.ip}:${CONFIG.port}/province/selection`,\n//             type: 'GET',\n//             dataType: 'json',\n//             success: function (response) {\n//                 setSelectLocations(response.provinces);\n//             },\n//             error: function (error) {\n//                 console.error('Error:', error);\n//             },\n//         });\n//     }\n//     function getCategories() {\n//         $.ajax({\n//             url: `${CONFIG.ip}:${CONFIG.port}/category/selection`,\n//             type: 'GET',\n//             dataType: 'json',\n//             success: function (response) {\n//                 setSelectCategories(response.categories);\n//             },\n//             error: function (error) {\n//                 console.error('Error:', error);\n//             },\n//         });\n//     }\n\n//     const onChangeSelectCategory = (e) => {\n//         setCategories([e.value, e.label]);\n//     };\n//     const onChangeSelectLocation = (e) => {\n//         setLocations([e.value, e.label]);\n//     };\n//     const onChangeMinBudget = (e) => {\n//         setMinBudget(parseFloat(e.target.value))\n//     };\n//     const onChangeMaxBudget = (e) => {\n//         setMaxBudget(parseFloat(e.target.value))\n//     };\n\n//     const handleAnalysis = (e) => {\n//         e.preventDefault();\n//         localStorage.setItem('filter', JSON.stringify({\n//             \"categories\": categories,\n//             \"locations\": locations,\n//             \"minBudget\": minBudget,\n//             \"maxBudget\": maxBudget\n//         }));\n//         window.location.reload();\n\n//     }\n//     const handleReset = (e) => {\n//         e.preventDefault();\n//         localStorage.setItem('filter', JSON.stringify({\n//             \"categories\": [],\n//             \"locations\": [],\n//             \"minBudget\": 0.00,\n//             \"maxBudget\": 0.00\n//         }));\n//         window.location.reload();\n\n//     }\n\n//     useEffect(() => {\n//         getCategories();\n//         getLocations();\n//     }, []);\n\n//     return (\n//         <section>\n//             <div className=\"budget-analysis-container\">\n//                 <div>\n//                     <h4 className=\"main-caption\"><b>Budget Analysis</b></h4>\n//                 </div>\n//                 <form className=\"nest-form\" onSubmit={handleAnalysis}>\n//                     <div className=\"row form-category\">\n\n//                         <div className=\"form-group col-md-12\">\n//                             <label htmlFor=\"inputPassword4\">Location</label>\n//                             <Select options={selectLocations} onChange={onChangeSelectLocation} placeholder=\"Phnom Penh, Kompot...\" required/>\n//                         </div>\n\n//                     </div>\n//                     <div className=\"row form-budget\">\n\n//                         <div className=\"form-group col-md-6\">\n//                             <label htmlFor=\"inputEmail4\">Min-Budget ($)</label>\n//                             <div className=\"input-container\">\n//                                 <input className=\"input-input\" min=\"0\" type=\"number\" value={minBudget} onChange={onChangeMinBudget} placeholder=\"Mininum Budget...\"/>\n//                             </div>\n//                         </div>\n//                         <div className=\"form-group col-md-6\">\n//                             <label htmlFor=\"inputEmail4\">Max-Budget ($)</label>\n//                             <div className=\"input-container\">\n//                                 <input className=\"input-input\" min=\"0\" type=\"number\" value={maxBudget} onChange={onChangeMaxBudget} placeholder=\"Maxinum Budget...\" required />\n//                             </div>\n//                         </div>\n\n//                     </div>\n\n//                     <span className='span-analysis-button'>\n//                         <button type=\"submit\" className=\"btn btn-primary analysis-button\">\n//                             Analysis\n//                         </button>\n//                     </span>\n//                     <span className='span-analysis-button'>\n//                         <button type=\"button\" className=\"btn btn-secondary\" onClick={handleReset}>\n//                             Reset\n//                         </button>\n//                     </span>\n//                 </form>\n\n//             </div>\n//         </section>\n//     );\n// };\n\n// export default BudgetAnalyzer;","map":{"version":3,"names":[],"sources":["/Users/chhornsotheavann/Documents/TripWallet-Frontend/src/component/budget_anlyzer.js"],"sourcesContent":["\n\n\n// import React, { useState, useEffect, useContext, createContext } from 'react';\n// import Select from 'react-select'\n// import { useNavigate } from 'react-router-dom';\n\n// import $ from 'jquery'\n\n// import '../css/budget_analyzer.css';\n\n// var CONFIG = require('../conf.json')\n\n// const BudgetAnalyzer = () => {\n//     const navigate = useNavigate()\n\n//     const [selectCategories, setSelectCategories] = useState([]);\n//     const [selectLocations, setSelectLocations] = useState([]);\n\n//     const [categories, setCategories] = useState([]);\n//     const [locations, setLocations] = useState([]);\n//     const [minBudget, setMinBudget] = useState(0.00);\n//     const [maxBudget, setMaxBudget] = useState(0.00);\n    \n\n//     function getLocations() {\n//         $.ajax({\n//             url: `${CONFIG.ip}:${CONFIG.port}/province/selection`,\n//             type: 'GET',\n//             dataType: 'json',\n//             success: function (response) {\n//                 setSelectLocations(response.provinces);\n//             },\n//             error: function (error) {\n//                 console.error('Error:', error);\n//             },\n//         });\n//     }\n//     function getCategories() {\n//         $.ajax({\n//             url: `${CONFIG.ip}:${CONFIG.port}/category/selection`,\n//             type: 'GET',\n//             dataType: 'json',\n//             success: function (response) {\n//                 setSelectCategories(response.categories);\n//             },\n//             error: function (error) {\n//                 console.error('Error:', error);\n//             },\n//         });\n//     }\n\n//     const onChangeSelectCategory = (e) => {\n//         setCategories([e.value, e.label]);\n//     };\n//     const onChangeSelectLocation = (e) => {\n//         setLocations([e.value, e.label]);\n//     };\n//     const onChangeMinBudget = (e) => {\n//         setMinBudget(parseFloat(e.target.value))\n//     };\n//     const onChangeMaxBudget = (e) => {\n//         setMaxBudget(parseFloat(e.target.value))\n//     };\n\n//     const handleAnalysis = (e) => {\n//         e.preventDefault();\n//         localStorage.setItem('filter', JSON.stringify({\n//             \"categories\": categories,\n//             \"locations\": locations,\n//             \"minBudget\": minBudget,\n//             \"maxBudget\": maxBudget\n//         }));\n//         window.location.reload();\n\n//     }\n//     const handleReset = (e) => {\n//         e.preventDefault();\n//         localStorage.setItem('filter', JSON.stringify({\n//             \"categories\": [],\n//             \"locations\": [],\n//             \"minBudget\": 0.00,\n//             \"maxBudget\": 0.00\n//         }));\n//         window.location.reload();\n\n//     }\n    \n//     useEffect(() => {\n//         getCategories();\n//         getLocations();\n//     }, []);\n\n//     return (\n//         <section>\n//             <div className=\"budget-analysis-container\">\n//                 <div>\n//                     <h4 className=\"main-caption\"><b>Budget Analysis</b></h4>\n//                 </div>\n//                 <form className=\"nest-form\" onSubmit={handleAnalysis}>\n//                     <div className=\"row form-category\">\n\n                       \n//                         <div className=\"form-group col-md-12\">\n//                             <label htmlFor=\"inputPassword4\">Location</label>\n//                             <Select options={selectLocations} onChange={onChangeSelectLocation} placeholder=\"Phnom Penh, Kompot...\" required/>\n//                         </div>\n                        \n//                     </div>\n//                     <div className=\"row form-budget\">\n\n//                         <div className=\"form-group col-md-6\">\n//                             <label htmlFor=\"inputEmail4\">Min-Budget ($)</label>\n//                             <div className=\"input-container\">\n//                                 <input className=\"input-input\" min=\"0\" type=\"number\" value={minBudget} onChange={onChangeMinBudget} placeholder=\"Mininum Budget...\"/>\n//                             </div>\n//                         </div>\n//                         <div className=\"form-group col-md-6\">\n//                             <label htmlFor=\"inputEmail4\">Max-Budget ($)</label>\n//                             <div className=\"input-container\">\n//                                 <input className=\"input-input\" min=\"0\" type=\"number\" value={maxBudget} onChange={onChangeMaxBudget} placeholder=\"Maxinum Budget...\" required />\n//                             </div>\n//                         </div>\n                        \n//                     </div>\n                    \n//                     <span className='span-analysis-button'>\n//                         <button type=\"submit\" className=\"btn btn-primary analysis-button\">\n//                             Analysis\n//                         </button>\n//                     </span>\n//                     <span className='span-analysis-button'>\n//                         <button type=\"button\" className=\"btn btn-secondary\" onClick={handleReset}>\n//                             Reset\n//                         </button>\n//                     </span>\n//                 </form>\n\n//             </div>\n//         </section>\n//     );\n// };\n\n// export default BudgetAnalyzer;\n"],"mappings":";;AAGA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}