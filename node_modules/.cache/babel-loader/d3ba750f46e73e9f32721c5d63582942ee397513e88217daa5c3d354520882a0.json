{"ast":null,"code":"var _jsxFileName = \"/Users/chhornsotheavann/Documents/TripWallet-Frontend/src/component/budget_anlyzer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Select from 'react-select';\nimport categoriesData from './categoriesData'; // your static categories data\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BudgetAnalyzer = () => {\n  _s();\n  // options for react-select — convert static data into { value, label }\n  const categoryOptions = categoriesData.map(cat => ({\n    value: cat.id,\n    label: cat.name\n  }));\n\n  // Selected category object(s)\n  const [selectedCategory, setSelectedCategory] = useState(null);\n\n  // Similarly for locations, keep your existing code or use static locations\n\n  // Handle select change for categories\n  const onChangeSelectCategory = selectedOption => {\n    setSelectedCategory(selectedOption);\n    // selectedOption is an object {value, label}\n  };\n\n  // Example for form submit\n  const handleAnalysis = e => {\n    e.preventDefault();\n\n    // You can save just the selected category id(s) or full object(s)\n    const selectedCategoryData = categoriesData.find(cat => cat.id === (selectedCategory === null || selectedCategory === void 0 ? void 0 : selectedCategory.value));\n    console.log('Selected category:', selectedCategoryData);\n\n    // Save to localStorage or do your logic here\n    localStorage.setItem('selectedCategory', JSON.stringify(selectedCategoryData));\n\n    // Reload or navigate as you want\n    window.location.reload();\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleAnalysis,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Category\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Select, {\n      options: categoryOptions,\n      onChange: onChangeSelectCategory,\n      value: selectedCategory,\n      placeholder: \"Select a category\",\n      isClearable: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(BudgetAnalyzer, \"RgHDLEuJ1Ja2GayX64Y/niiK+6s=\");\n_c = BudgetAnalyzer;\nexport default BudgetAnalyzer;\n\n// import React, { useState, useEffect, useContext, createContext } from 'react';\n// import Select from 'react-select'\n// import { useNavigate } from 'react-router-dom';\n\n// import $ from 'jquery'\n\n// import '../css/budget_analyzer.css';\n\n// var CONFIG = require('../conf.json')\n\n// const BudgetAnalyzer = () => {\n//     const navigate = useNavigate()\n\n//     const [selectCategories, setSelectCategories] = useState([]);\n//     const [selectLocations, setSelectLocations] = useState([]);\n\n//     const [categories, setCategories] = useState([]);\n//     const [locations, setLocations] = useState([]);\n//     const [minBudget, setMinBudget] = useState(0.00);\n//     const [maxBudget, setMaxBudget] = useState(0.00);\n\n//     function getLocations() {\n//         $.ajax({\n//             url: `${CONFIG.ip}:${CONFIG.port}/province/selection`,\n//             type: 'GET',\n//             dataType: 'json',\n//             success: function (response) {\n//                 setSelectLocations(response.provinces);\n//             },\n//             error: function (error) {\n//                 console.error('Error:', error);\n//             },\n//         });\n//     }\n//     function getCategories() {\n//         $.ajax({\n//             url: `${CONFIG.ip}:${CONFIG.port}/category/selection`,\n//             type: 'GET',\n//             dataType: 'json',\n//             success: function (response) {\n//                 setSelectCategories(response.categories);\n//             },\n//             error: function (error) {\n//                 console.error('Error:', error);\n//             },\n//         });\n//     }\n\n//     const onChangeSelectCategory = (e) => {\n//         setCategories([e.value, e.label]);\n//     };\n//     const onChangeSelectLocation = (e) => {\n//         setLocations([e.value, e.label]);\n//     };\n//     const onChangeMinBudget = (e) => {\n//         setMinBudget(parseFloat(e.target.value))\n//     };\n//     const onChangeMaxBudget = (e) => {\n//         setMaxBudget(parseFloat(e.target.value))\n//     };\n\n//     const handleAnalysis = (e) => {\n//         e.preventDefault();\n//         localStorage.setItem('filter', JSON.stringify({\n//             \"categories\": categories,\n//             \"locations\": locations,\n//             \"minBudget\": minBudget,\n//             \"maxBudget\": maxBudget\n//         }));\n//         window.location.reload();\n\n//     }\n//     const handleReset = (e) => {\n//         e.preventDefault();\n//         localStorage.setItem('filter', JSON.stringify({\n//             \"categories\": [],\n//             \"locations\": [],\n//             \"minBudget\": 0.00,\n//             \"maxBudget\": 0.00\n//         }));\n//         window.location.reload();\n\n//     }\n\n//     useEffect(() => {\n//         getCategories();\n//         getLocations();\n//     }, []);\n\n//     return (\n//         <section>\n//             <div className=\"budget-analysis-container\">\n//                 <div>\n//                     <h4 className=\"main-caption\"><b>Budget Analysis</b></h4>\n//                 </div>\n//                 <form className=\"nest-form\" onSubmit={handleAnalysis}>\n//                     <div className=\"row form-category\">\n\n//                         <div className=\"form-group col-md-12\">\n//                             <label htmlFor=\"inputPassword4\">Location</label>\n//                             <Select options={selectLocations} onChange={onChangeSelectLocation} placeholder=\"Phnom Penh, Kompot...\" required/>\n//                         </div>\n\n//                     </div>\n//                     <div className=\"row form-budget\">\n\n//                         <div className=\"form-group col-md-6\">\n//                             <label htmlFor=\"inputEmail4\">Min-Budget ($)</label>\n//                             <div className=\"input-container\">\n//                                 <input className=\"input-input\" min=\"0\" type=\"number\" value={minBudget} onChange={onChangeMinBudget} placeholder=\"Mininum Budget...\"/>\n//                             </div>\n//                         </div>\n//                         <div className=\"form-group col-md-6\">\n//                             <label htmlFor=\"inputEmail4\">Max-Budget ($)</label>\n//                             <div className=\"input-container\">\n//                                 <input className=\"input-input\" min=\"0\" type=\"number\" value={maxBudget} onChange={onChangeMaxBudget} placeholder=\"Maxinum Budget...\" required />\n//                             </div>\n//                         </div>\n\n//                     </div>\n\n//                     <span className='span-analysis-button'>\n//                         <button type=\"submit\" className=\"btn btn-primary analysis-button\">\n//                             Analysis\n//                         </button>\n//                     </span>\n//                     <span className='span-analysis-button'>\n//                         <button type=\"button\" className=\"btn btn-secondary\" onClick={handleReset}>\n//                             Reset\n//                         </button>\n//                     </span>\n//                 </form>\n\n//             </div>\n//         </section>\n//     );\n// };\n\n// export default BudgetAnalyzer;\nvar _c;\n$RefreshReg$(_c, \"BudgetAnalyzer\");","map":{"version":3,"names":["React","useState","useEffect","Select","categoriesData","jsxDEV","_jsxDEV","BudgetAnalyzer","_s","categoryOptions","map","cat","value","id","label","name","selectedCategory","setSelectedCategory","onChangeSelectCategory","selectedOption","handleAnalysis","e","preventDefault","selectedCategoryData","find","console","log","localStorage","setItem","JSON","stringify","window","location","reload","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","options","onChange","placeholder","isClearable","type","_c","$RefreshReg$"],"sources":["/Users/chhornsotheavann/Documents/TripWallet-Frontend/src/component/budget_anlyzer.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Select from 'react-select';\n\nimport categoriesData from './categoriesData'; // your static categories data\n\nconst BudgetAnalyzer = () => {\n  // options for react-select — convert static data into { value, label }\n  const categoryOptions = categoriesData.map(cat => ({\n    value: cat.id,\n    label: cat.name,\n  }));\n\n  // Selected category object(s)\n  const [selectedCategory, setSelectedCategory] = useState(null);\n\n  // Similarly for locations, keep your existing code or use static locations\n\n  // Handle select change for categories\n  const onChangeSelectCategory = (selectedOption) => {\n    setSelectedCategory(selectedOption); \n    // selectedOption is an object {value, label}\n  };\n\n  // Example for form submit\n  const handleAnalysis = (e) => {\n    e.preventDefault();\n\n    // You can save just the selected category id(s) or full object(s)\n    const selectedCategoryData = categoriesData.find(cat => cat.id === selectedCategory?.value);\n\n    console.log('Selected category:', selectedCategoryData);\n\n    // Save to localStorage or do your logic here\n    localStorage.setItem('selectedCategory', JSON.stringify(selectedCategoryData));\n\n    // Reload or navigate as you want\n    window.location.reload();\n  };\n\n  return (\n    <form onSubmit={handleAnalysis}>\n      <label>Category</label>\n      <Select \n        options={categoryOptions} \n        onChange={onChangeSelectCategory} \n        value={selectedCategory} \n        placeholder=\"Select a category\"\n        isClearable\n      />\n      <button type=\"submit\">Submit</button>\n    </form>\n  );\n};\n\nexport default BudgetAnalyzer;\n\n\n\n\n// import React, { useState, useEffect, useContext, createContext } from 'react';\n// import Select from 'react-select'\n// import { useNavigate } from 'react-router-dom';\n\n// import $ from 'jquery'\n\n// import '../css/budget_analyzer.css';\n\n// var CONFIG = require('../conf.json')\n\n// const BudgetAnalyzer = () => {\n//     const navigate = useNavigate()\n\n//     const [selectCategories, setSelectCategories] = useState([]);\n//     const [selectLocations, setSelectLocations] = useState([]);\n\n//     const [categories, setCategories] = useState([]);\n//     const [locations, setLocations] = useState([]);\n//     const [minBudget, setMinBudget] = useState(0.00);\n//     const [maxBudget, setMaxBudget] = useState(0.00);\n    \n\n//     function getLocations() {\n//         $.ajax({\n//             url: `${CONFIG.ip}:${CONFIG.port}/province/selection`,\n//             type: 'GET',\n//             dataType: 'json',\n//             success: function (response) {\n//                 setSelectLocations(response.provinces);\n//             },\n//             error: function (error) {\n//                 console.error('Error:', error);\n//             },\n//         });\n//     }\n//     function getCategories() {\n//         $.ajax({\n//             url: `${CONFIG.ip}:${CONFIG.port}/category/selection`,\n//             type: 'GET',\n//             dataType: 'json',\n//             success: function (response) {\n//                 setSelectCategories(response.categories);\n//             },\n//             error: function (error) {\n//                 console.error('Error:', error);\n//             },\n//         });\n//     }\n\n//     const onChangeSelectCategory = (e) => {\n//         setCategories([e.value, e.label]);\n//     };\n//     const onChangeSelectLocation = (e) => {\n//         setLocations([e.value, e.label]);\n//     };\n//     const onChangeMinBudget = (e) => {\n//         setMinBudget(parseFloat(e.target.value))\n//     };\n//     const onChangeMaxBudget = (e) => {\n//         setMaxBudget(parseFloat(e.target.value))\n//     };\n\n//     const handleAnalysis = (e) => {\n//         e.preventDefault();\n//         localStorage.setItem('filter', JSON.stringify({\n//             \"categories\": categories,\n//             \"locations\": locations,\n//             \"minBudget\": minBudget,\n//             \"maxBudget\": maxBudget\n//         }));\n//         window.location.reload();\n\n//     }\n//     const handleReset = (e) => {\n//         e.preventDefault();\n//         localStorage.setItem('filter', JSON.stringify({\n//             \"categories\": [],\n//             \"locations\": [],\n//             \"minBudget\": 0.00,\n//             \"maxBudget\": 0.00\n//         }));\n//         window.location.reload();\n\n//     }\n    \n//     useEffect(() => {\n//         getCategories();\n//         getLocations();\n//     }, []);\n\n//     return (\n//         <section>\n//             <div className=\"budget-analysis-container\">\n//                 <div>\n//                     <h4 className=\"main-caption\"><b>Budget Analysis</b></h4>\n//                 </div>\n//                 <form className=\"nest-form\" onSubmit={handleAnalysis}>\n//                     <div className=\"row form-category\">\n\n                       \n//                         <div className=\"form-group col-md-12\">\n//                             <label htmlFor=\"inputPassword4\">Location</label>\n//                             <Select options={selectLocations} onChange={onChangeSelectLocation} placeholder=\"Phnom Penh, Kompot...\" required/>\n//                         </div>\n                        \n//                     </div>\n//                     <div className=\"row form-budget\">\n\n//                         <div className=\"form-group col-md-6\">\n//                             <label htmlFor=\"inputEmail4\">Min-Budget ($)</label>\n//                             <div className=\"input-container\">\n//                                 <input className=\"input-input\" min=\"0\" type=\"number\" value={minBudget} onChange={onChangeMinBudget} placeholder=\"Mininum Budget...\"/>\n//                             </div>\n//                         </div>\n//                         <div className=\"form-group col-md-6\">\n//                             <label htmlFor=\"inputEmail4\">Max-Budget ($)</label>\n//                             <div className=\"input-container\">\n//                                 <input className=\"input-input\" min=\"0\" type=\"number\" value={maxBudget} onChange={onChangeMaxBudget} placeholder=\"Maxinum Budget...\" required />\n//                             </div>\n//                         </div>\n                        \n//                     </div>\n                    \n//                     <span className='span-analysis-button'>\n//                         <button type=\"submit\" className=\"btn btn-primary analysis-button\">\n//                             Analysis\n//                         </button>\n//                     </span>\n//                     <span className='span-analysis-button'>\n//                         <button type=\"button\" className=\"btn btn-secondary\" onClick={handleReset}>\n//                             Reset\n//                         </button>\n//                     </span>\n//                 </form>\n\n//             </div>\n//         </section>\n//     );\n// };\n\n// export default BudgetAnalyzer;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,cAAc;AAEjC,OAAOC,cAAc,MAAM,kBAAkB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B;EACA,MAAMC,eAAe,GAAGL,cAAc,CAACM,GAAG,CAACC,GAAG,KAAK;IACjDC,KAAK,EAAED,GAAG,CAACE,EAAE;IACbC,KAAK,EAAEH,GAAG,CAACI;EACb,CAAC,CAAC,CAAC;;EAEH;EACA,MAAM,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;;EAE9D;;EAEA;EACA,MAAMiB,sBAAsB,GAAIC,cAAc,IAAK;IACjDF,mBAAmB,CAACE,cAAc,CAAC;IACnC;EACF,CAAC;;EAED;EACA,MAAMC,cAAc,GAAIC,CAAC,IAAK;IAC5BA,CAAC,CAACC,cAAc,CAAC,CAAC;;IAElB;IACA,MAAMC,oBAAoB,GAAGnB,cAAc,CAACoB,IAAI,CAACb,GAAG,IAAIA,GAAG,CAACE,EAAE,MAAKG,gBAAgB,aAAhBA,gBAAgB,uBAAhBA,gBAAgB,CAAEJ,KAAK,EAAC;IAE3Fa,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEH,oBAAoB,CAAC;;IAEvD;IACAI,YAAY,CAACC,OAAO,CAAC,kBAAkB,EAAEC,IAAI,CAACC,SAAS,CAACP,oBAAoB,CAAC,CAAC;;IAE9E;IACAQ,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC;EAC1B,CAAC;EAED,oBACE3B,OAAA;IAAM4B,QAAQ,EAAEd,cAAe;IAAAe,QAAA,gBAC7B7B,OAAA;MAAA6B,QAAA,EAAO;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eACvBjC,OAAA,CAACH,MAAM;MACLqC,OAAO,EAAE/B,eAAgB;MACzBgC,QAAQ,EAAEvB,sBAAuB;MACjCN,KAAK,EAAEI,gBAAiB;MACxB0B,WAAW,EAAC,mBAAmB;MAC/BC,WAAW;IAAA;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACZ,CAAC,eACFjC,OAAA;MAAQsC,IAAI,EAAC,QAAQ;MAAAT,QAAA,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjC,CAAC;AAEX,CAAC;AAAC/B,EAAA,CA/CID,cAAc;AAAAsC,EAAA,GAAdtC,cAAc;AAiDpB,eAAeA,cAAc;;AAK7B;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AAAA,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}