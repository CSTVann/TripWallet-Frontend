{"ast":null,"code":"var _jsxFileName = \"/Users/sotheavann/Documents/Project/src/js/LoginHandler.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport $ from 'jquery';\n\n// Create a context with default values\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginContext = /*#__PURE__*/createContext({\n  isLoggedIn: false,\n  isAdmin: false,\n  userName: '',\n  email: '',\n  password: '',\n  login: () => {},\n  logout: () => {},\n  register: () => {}\n});\n\n// Create a provider component\nexport const LoginProvider = ({\n  children\n}) => {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [userName, setUserName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const login = async (email, password) => {\n    try {\n      const response = await $.ajax({\n        url: 'http://127.0.0.1:5000/user/authenticate',\n        type: 'POST',\n        dataType: 'json',\n        contentType: 'application/json',\n        data: JSON.stringify({\n          email: email,\n          password: password\n        })\n      });\n      console.log(response);\n      if (response.status) {\n        var user = response.user;\n        localStorage.setItem('user', JSON.stringify(response.user));\n        setIsLoggedIn(true);\n        setIsAdmin(user.is_admin);\n        setUserName(user.name);\n        setEmail(user.email);\n        setPassword(user.password);\n      } else {\n        setIsLoggedIn(false);\n      }\n      return response;\n    } catch (error) {\n      console.error('Something Went Wrong:', error);\n      setIsLoggedIn(false);\n    }\n  };\n  const logout = () => {\n    // Perform logout logic\n    setIsLoggedIn(false);\n    setIsAdmin(false);\n  };\n  const register = async (username, email, password) => {\n    try {\n      const response = await $.ajax({\n        url: 'http://127.0.0.1:5000/user/create',\n        type: 'POST',\n        dataType: 'json',\n        contentType: 'application/json',\n        data: JSON.stringify({\n          name: username,\n          email: email,\n          password: password\n        })\n      });\n      console.log(response);\n    } catch (error) {\n      console.error('Something Went Wrong:', error);\n      setIsLoggedIn(false);\n    }\n  };\n  useEffect(() => {\n    console.log('handler use effect', isLoggedIn, userName);\n  }, [isLoggedIn, userName]);\n  return /*#__PURE__*/_jsxDEV(LoginContext.Provider, {\n    value: {\n      isLoggedIn,\n      isAdmin,\n      userName,\n      email,\n      password,\n      login,\n      logout,\n      register\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 9\n  }, this);\n};\n\n// Custom hook to consume the LoginContext\n_s(LoginProvider, \"2SPYe6xeKRAGEACB+b5D0ZXFDJ4=\");\n_c = LoginProvider;\nexport const useLogin = () => {\n  _s2();\n  return useContext(LoginContext);\n};\n_s2(useLogin, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"LoginProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","$","jsxDEV","_jsxDEV","LoginContext","isLoggedIn","isAdmin","userName","email","password","login","logout","register","LoginProvider","children","_s","setIsLoggedIn","setIsAdmin","setUserName","setEmail","setPassword","response","ajax","url","type","dataType","contentType","data","JSON","stringify","console","log","status","user","localStorage","setItem","is_admin","name","error","username","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useLogin","_s2","$RefreshReg$"],"sources":["/Users/sotheavann/Documents/Project/src/js/LoginHandler.js"],"sourcesContent":["import React, { createContext, useContext, useState , useEffect } from 'react';\n\nimport $ from 'jquery'\n\n\n// Create a context with default values\nconst LoginContext = createContext({\n    isLoggedIn: false,\n    isAdmin: false,\n    userName: '',\n    email: '',\n    password: '',\n    login: () => {\n\n    },\n    logout: () => {\n\n    },\n    register: () => {\n\n    }\n});\n\n// Create a provider component\nexport const LoginProvider = ({ children }) => {\n\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\n    const [isAdmin, setIsAdmin] = useState(false);\n    const [userName, setUserName] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n\n\n    const login = async (email, password) => {\n\n        try {\n            const response = await $.ajax({\n                url: 'http://127.0.0.1:5000/user/authenticate',\n                type: 'POST',\n                dataType: 'json',\n                contentType: 'application/json',\n                data: JSON.stringify({\n                    email: email,\n                    password: password,\n                }),\n            });\n    \n            console.log(response);\n    \n            if (response.status) {\n                var user = response.user;\n                localStorage.setItem('user', JSON.stringify(response.user));\n                setIsLoggedIn(true);\n                setIsAdmin(user.is_admin);\n                setUserName(user.name);\n                setEmail(user.email);\n                setPassword(user.password);\n\n            } else {\n                setIsLoggedIn(false);\n            }\n            return response\n        } catch (error) {\n            console.error('Something Went Wrong:', error);\n            setIsLoggedIn(false);\n        }\n    };\n\n    const logout = () => {\n        // Perform logout logic\n        setIsLoggedIn(false);\n        setIsAdmin(false)\n    };\n\n    const register = async (username, email, password) => {\n\n        try {\n            const response = await $.ajax({\n                url: 'http://127.0.0.1:5000/user/create',\n                type: 'POST',\n                dataType: 'json',\n                contentType: 'application/json',\n                data: JSON.stringify({\n                    name: username,\n                    email: email,\n                    password: password,\n                }),\n            });\n    \n            console.log(response);\n    \n        } catch (error) {\n            console.error('Something Went Wrong:', error);\n            setIsLoggedIn(false);\n        }\n    };\n    \n\n    useEffect(() => {\n        console.log('handler use effect', isLoggedIn, userName);\n    }, [isLoggedIn, userName]);\n      \n\n    return (\n        <LoginContext.Provider value={{isLoggedIn, isAdmin, userName, email, password, login, logout, register}}>\n            {children}\n        </LoginContext.Provider>\n    );\n};\n\n// Custom hook to consume the LoginContext\nexport const useLogin = () => {\n  return useContext(LoginContext);\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}