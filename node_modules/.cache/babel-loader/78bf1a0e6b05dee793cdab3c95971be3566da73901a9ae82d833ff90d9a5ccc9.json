{"ast":null,"code":"var _jsxFileName = \"/Users/chhornsotheavann/Documents/TripWallet-Frontend/src/component/budget_anlyzer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Select from 'react-select';\nimport { useNavigate } from 'react-router-dom';\nimport $ from 'jquery';\nimport '../css/budget_analyzer.css';\n\n// Import static categories data instead of AJAX\nimport categoriesData from '../data/categoriesData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar CONFIG = require('../conf.json');\nconst BudgetAnalyzer = () => {\n  _s();\n  const navigate = useNavigate();\n\n  // States for selected categories and locations in react-select format\n  const [selectCategories, setSelectCategories] = useState([]);\n  const [selectLocations, setSelectLocations] = useState([]);\n\n  // States to hold chosen categories and locations (id and label pairs)\n  const [categories, setCategories] = useState([]);\n  const [locations, setLocations] = useState([]);\n\n  // States for budget inputs\n  const [minBudget, setMinBudget] = useState(0.0);\n  const [maxBudget, setMaxBudget] = useState(0.0);\n\n  // Fetch locations from API via AJAX (keep as is or replace with static data if you want)\n  function getLocations() {\n    $.ajax({\n      url: `${CONFIG.ip}:${CONFIG.port}/province/selection`,\n      type: 'GET',\n      dataType: 'json',\n      success: function (response) {\n        // Update options for react-select locations dropdown\n        setSelectLocations(response.provinces);\n      },\n      error: function (error) {\n        console.error('Error fetching locations:', error);\n      }\n    });\n  }\n\n  // Instead of AJAX, use imported static categories data here\n  function getCategories() {\n    // Map categoriesData to react-select option format: { value: id, label: name }\n    const options = categoriesData.map(cat => ({\n      value: cat.id,\n      label: cat.name\n    }));\n    setSelectCategories(options);\n  }\n\n  // Handlers for react-select changes\n  const onChangeSelectCategory = e => {\n    // Store selected category as [value, label]\n    setCategories([e.value, e.label]);\n  };\n  const onChangeSelectLocation = e => {\n    setLocations([e.value, e.label]);\n  };\n\n  // Handlers for budget input changes\n  const onChangeMinBudget = e => setMinBudget(parseFloat(e.target.value) || 0);\n  const onChangeMaxBudget = e => setMaxBudget(parseFloat(e.target.value) || 0);\n\n  // Handle form submit: save filter to localStorage and reload page\n  const handleAnalysis = e => {\n    e.preventDefault();\n    localStorage.setItem('filter', JSON.stringify({\n      categories,\n      locations,\n      minBudget,\n      maxBudget\n    }));\n    window.location.reload();\n  };\n\n  // Handle reset: clear filter and reload page\n  const handleReset = e => {\n    e.preventDefault();\n    localStorage.setItem('filter', JSON.stringify({\n      categories: [],\n      locations: [],\n      minBudget: 0.0,\n      maxBudget: 0.0\n    }));\n    window.location.reload();\n  };\n\n  // useEffect runs once: load categories from static data and locations from API\n  useEffect(() => {\n    getCategories();\n    getLocations();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"budget-analysis-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"main-caption\",\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Budget Analysis\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 40\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"nest-form\",\n        onSubmit: handleAnalysis,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row form-category\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group col-md-12\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"inputLocation\",\n              children: \"Location\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              options: selectLocations,\n              onChange: onChangeSelectLocation,\n              placeholder: \"Phnom Penh, Kompot...\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row form-budget\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group col-md-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"inputMinBudget\",\n              children: \"Min-Budget ($)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-container\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"input-input\",\n                min: \"0\",\n                type: \"number\",\n                value: minBudget,\n                onChange: onChangeMinBudget,\n                placeholder: \"Minimum Budget...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group col-md-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"inputMaxBudget\",\n              children: \"Max-Budget ($)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-container\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"input-input\",\n                min: \"0\",\n                type: \"number\",\n                value: maxBudget,\n                onChange: onChangeMaxBudget,\n                placeholder: \"Maximum Budget...\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"span-analysis-button\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn btn-primary analysis-button\",\n            children: \"Analysis\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"span-analysis-button\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"btn btn-secondary\",\n            onClick: handleReset,\n            children: \"Reset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n};\n_s(BudgetAnalyzer, \"jKEDIOvZr0oIiSRNhPjiD/3iuww=\", false, function () {\n  return [useNavigate];\n});\n_c = BudgetAnalyzer;\nexport default BudgetAnalyzer;\n\n// import React, { useState, useEffect, useContext, createContext } from 'react';\n// import Select from 'react-select'\n// import { useNavigate } from 'react-router-dom';\n\n// import $ from 'jquery'\n\n// import '../css/budget_analyzer.css';\n\n// var CONFIG = require('../conf.json')\n\n// const BudgetAnalyzer = () => {\n//     const navigate = useNavigate()\n\n//     const [selectCategories, setSelectCategories] = useState([]);\n//     const [selectLocations, setSelectLocations] = useState([]);\n\n//     const [categories, setCategories] = useState([]);\n//     const [locations, setLocations] = useState([]);\n//     const [minBudget, setMinBudget] = useState(0.00);\n//     const [maxBudget, setMaxBudget] = useState(0.00);\n\n//     function getLocations() {\n//         $.ajax({\n//             url: `${CONFIG.ip}:${CONFIG.port}/province/selection`,\n//             type: 'GET',\n//             dataType: 'json',\n//             success: function (response) {\n//                 setSelectLocations(response.provinces);\n//             },\n//             error: function (error) {\n//                 console.error('Error:', error);\n//             },\n//         });\n//     }\n//     function getCategories() {\n//         $.ajax({\n//             url: `${CONFIG.ip}:${CONFIG.port}/category/selection`,\n//             type: 'GET',\n//             dataType: 'json',\n//             success: function (response) {\n//                 setSelectCategories(response.categories);\n//             },\n//             error: function (error) {\n//                 console.error('Error:', error);\n//             },\n//         });\n//     }\n\n//     const onChangeSelectCategory = (e) => {\n//         setCategories([e.value, e.label]);\n//     };\n//     const onChangeSelectLocation = (e) => {\n//         setLocations([e.value, e.label]);\n//     };\n//     const onChangeMinBudget = (e) => {\n//         setMinBudget(parseFloat(e.target.value))\n//     };\n//     const onChangeMaxBudget = (e) => {\n//         setMaxBudget(parseFloat(e.target.value))\n//     };\n\n//     const handleAnalysis = (e) => {\n//         e.preventDefault();\n//         localStorage.setItem('filter', JSON.stringify({\n//             \"categories\": categories,\n//             \"locations\": locations,\n//             \"minBudget\": minBudget,\n//             \"maxBudget\": maxBudget\n//         }));\n//         window.location.reload();\n\n//     }\n//     const handleReset = (e) => {\n//         e.preventDefault();\n//         localStorage.setItem('filter', JSON.stringify({\n//             \"categories\": [],\n//             \"locations\": [],\n//             \"minBudget\": 0.00,\n//             \"maxBudget\": 0.00\n//         }));\n//         window.location.reload();\n\n//     }\n\n//     useEffect(() => {\n//         getCategories();\n//         getLocations();\n//     }, []);\n\n//     return (\n//         <section>\n//             <div className=\"budget-analysis-container\">\n//                 <div>\n//                     <h4 className=\"main-caption\"><b>Budget Analysis</b></h4>\n//                 </div>\n//                 <form className=\"nest-form\" onSubmit={handleAnalysis}>\n//                     <div className=\"row form-category\">\n\n//                         <div className=\"form-group col-md-12\">\n//                             <label htmlFor=\"inputPassword4\">Location</label>\n//                             <Select options={selectLocations} onChange={onChangeSelectLocation} placeholder=\"Phnom Penh, Kompot...\" required/>\n//                         </div>\n\n//                     </div>\n//                     <div className=\"row form-budget\">\n\n//                         <div className=\"form-group col-md-6\">\n//                             <label htmlFor=\"inputEmail4\">Min-Budget ($)</label>\n//                             <div className=\"input-container\">\n//                                 <input className=\"input-input\" min=\"0\" type=\"number\" value={minBudget} onChange={onChangeMinBudget} placeholder=\"Mininum Budget...\"/>\n//                             </div>\n//                         </div>\n//                         <div className=\"form-group col-md-6\">\n//                             <label htmlFor=\"inputEmail4\">Max-Budget ($)</label>\n//                             <div className=\"input-container\">\n//                                 <input className=\"input-input\" min=\"0\" type=\"number\" value={maxBudget} onChange={onChangeMaxBudget} placeholder=\"Maxinum Budget...\" required />\n//                             </div>\n//                         </div>\n\n//                     </div>\n\n//                     <span className='span-analysis-button'>\n//                         <button type=\"submit\" className=\"btn btn-primary analysis-button\">\n//                             Analysis\n//                         </button>\n//                     </span>\n//                     <span className='span-analysis-button'>\n//                         <button type=\"button\" className=\"btn btn-secondary\" onClick={handleReset}>\n//                             Reset\n//                         </button>\n//                     </span>\n//                 </form>\n\n//             </div>\n//         </section>\n//     );\n// };\n\n// export default BudgetAnalyzer;\nvar _c;\n$RefreshReg$(_c, \"BudgetAnalyzer\");","map":{"version":3,"names":["React","useState","useEffect","Select","useNavigate","$","categoriesData","jsxDEV","_jsxDEV","CONFIG","require","BudgetAnalyzer","_s","navigate","selectCategories","setSelectCategories","selectLocations","setSelectLocations","categories","setCategories","locations","setLocations","minBudget","setMinBudget","maxBudget","setMaxBudget","getLocations","ajax","url","ip","port","type","dataType","success","response","provinces","error","console","getCategories","options","map","cat","value","id","label","name","onChangeSelectCategory","e","onChangeSelectLocation","onChangeMinBudget","parseFloat","target","onChangeMaxBudget","handleAnalysis","preventDefault","localStorage","setItem","JSON","stringify","window","location","reload","handleReset","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","onChange","placeholder","required","min","onClick","_c","$RefreshReg$"],"sources":["/Users/chhornsotheavann/Documents/TripWallet-Frontend/src/component/budget_anlyzer.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Select from 'react-select';\nimport { useNavigate } from 'react-router-dom';\n\nimport $ from 'jquery';\n\nimport '../css/budget_analyzer.css';\n\n// Import static categories data instead of AJAX\nimport categoriesData from '../data/categoriesData';\n\nvar CONFIG = require('../conf.json');\n\nconst BudgetAnalyzer = () => {\n  const navigate = useNavigate();\n\n  // States for selected categories and locations in react-select format\n  const [selectCategories, setSelectCategories] = useState([]);\n  const [selectLocations, setSelectLocations] = useState([]);\n\n  // States to hold chosen categories and locations (id and label pairs)\n  const [categories, setCategories] = useState([]);\n  const [locations, setLocations] = useState([]);\n\n  // States for budget inputs\n  const [minBudget, setMinBudget] = useState(0.0);\n  const [maxBudget, setMaxBudget] = useState(0.0);\n\n  // Fetch locations from API via AJAX (keep as is or replace with static data if you want)\n  function getLocations() {\n    $.ajax({\n      url: `${CONFIG.ip}:${CONFIG.port}/province/selection`,\n      type: 'GET',\n      dataType: 'json',\n      success: function (response) {\n        // Update options for react-select locations dropdown\n        setSelectLocations(response.provinces);\n      },\n      error: function (error) {\n        console.error('Error fetching locations:', error);\n      },\n    });\n  }\n\n  // Instead of AJAX, use imported static categories data here\n  function getCategories() {\n    // Map categoriesData to react-select option format: { value: id, label: name }\n    const options = categoriesData.map(cat => ({\n      value: cat.id,\n      label: cat.name,\n    }));\n    setSelectCategories(options);\n  }\n\n  // Handlers for react-select changes\n  const onChangeSelectCategory = (e) => {\n    // Store selected category as [value, label]\n    setCategories([e.value, e.label]);\n  };\n\n  const onChangeSelectLocation = (e) => {\n    setLocations([e.value, e.label]);\n  };\n\n  // Handlers for budget input changes\n  const onChangeMinBudget = (e) => setMinBudget(parseFloat(e.target.value) || 0);\n  const onChangeMaxBudget = (e) => setMaxBudget(parseFloat(e.target.value) || 0);\n\n  // Handle form submit: save filter to localStorage and reload page\n  const handleAnalysis = (e) => {\n    e.preventDefault();\n    localStorage.setItem(\n      'filter',\n      JSON.stringify({\n        categories,\n        locations,\n        minBudget,\n        maxBudget,\n      })\n    );\n    window.location.reload();\n  };\n\n  // Handle reset: clear filter and reload page\n  const handleReset = (e) => {\n    e.preventDefault();\n    localStorage.setItem(\n      'filter',\n      JSON.stringify({\n        categories: [],\n        locations: [],\n        minBudget: 0.0,\n        maxBudget: 0.0,\n      })\n    );\n    window.location.reload();\n  };\n\n  // useEffect runs once: load categories from static data and locations from API\n  useEffect(() => {\n    getCategories();\n    getLocations();\n  }, []);\n\n  return (\n    <section>\n      <div className=\"budget-analysis-container\">\n        <div>\n          <h4 className=\"main-caption\"><b>Budget Analysis</b></h4>\n        </div>\n        <form className=\"nest-form\" onSubmit={handleAnalysis}>\n          <div className=\"row form-category\">\n            {/* Uncomment to enable category select dropdown */}\n            {/* <div className=\"form-group col-md-6\">\n              <label htmlFor=\"inputCategory\">Category</label>\n              <Select\n                options={selectCategories}\n                onChange={onChangeSelectCategory}\n                placeholder=\"Breaches, Mountains...\"\n                required\n              />\n            </div> */}\n            <div className=\"form-group col-md-12\">\n              <label htmlFor=\"inputLocation\">Location</label>\n              <Select\n                options={selectLocations}\n                onChange={onChangeSelectLocation}\n                placeholder=\"Phnom Penh, Kompot...\"\n                required\n              />\n            </div>\n          </div>\n\n          <div className=\"row form-budget\">\n            <div className=\"form-group col-md-6\">\n              <label htmlFor=\"inputMinBudget\">Min-Budget ($)</label>\n              <div className=\"input-container\">\n                <input\n                  className=\"input-input\"\n                  min=\"0\"\n                  type=\"number\"\n                  value={minBudget}\n                  onChange={onChangeMinBudget}\n                  placeholder=\"Minimum Budget...\"\n                />\n              </div>\n            </div>\n            <div className=\"form-group col-md-6\">\n              <label htmlFor=\"inputMaxBudget\">Max-Budget ($)</label>\n              <div className=\"input-container\">\n                <input\n                  className=\"input-input\"\n                  min=\"0\"\n                  type=\"number\"\n                  value={maxBudget}\n                  onChange={onChangeMaxBudget}\n                  placeholder=\"Maximum Budget...\"\n                  required\n                />\n              </div>\n            </div>\n          </div>\n\n          <span className=\"span-analysis-button\">\n            <button type=\"submit\" className=\"btn btn-primary analysis-button\">\n              Analysis\n            </button>\n          </span>\n          <span className=\"span-analysis-button\">\n            <button type=\"button\" className=\"btn btn-secondary\" onClick={handleReset}>\n              Reset\n            </button>\n          </span>\n        </form>\n      </div>\n    </section>\n  );\n};\n\nexport default BudgetAnalyzer;\n\n\n\n\n// import React, { useState, useEffect, useContext, createContext } from 'react';\n// import Select from 'react-select'\n// import { useNavigate } from 'react-router-dom';\n\n// import $ from 'jquery'\n\n// import '../css/budget_analyzer.css';\n\n// var CONFIG = require('../conf.json')\n\n// const BudgetAnalyzer = () => {\n//     const navigate = useNavigate()\n\n//     const [selectCategories, setSelectCategories] = useState([]);\n//     const [selectLocations, setSelectLocations] = useState([]);\n\n//     const [categories, setCategories] = useState([]);\n//     const [locations, setLocations] = useState([]);\n//     const [minBudget, setMinBudget] = useState(0.00);\n//     const [maxBudget, setMaxBudget] = useState(0.00);\n    \n\n//     function getLocations() {\n//         $.ajax({\n//             url: `${CONFIG.ip}:${CONFIG.port}/province/selection`,\n//             type: 'GET',\n//             dataType: 'json',\n//             success: function (response) {\n//                 setSelectLocations(response.provinces);\n//             },\n//             error: function (error) {\n//                 console.error('Error:', error);\n//             },\n//         });\n//     }\n//     function getCategories() {\n//         $.ajax({\n//             url: `${CONFIG.ip}:${CONFIG.port}/category/selection`,\n//             type: 'GET',\n//             dataType: 'json',\n//             success: function (response) {\n//                 setSelectCategories(response.categories);\n//             },\n//             error: function (error) {\n//                 console.error('Error:', error);\n//             },\n//         });\n//     }\n\n//     const onChangeSelectCategory = (e) => {\n//         setCategories([e.value, e.label]);\n//     };\n//     const onChangeSelectLocation = (e) => {\n//         setLocations([e.value, e.label]);\n//     };\n//     const onChangeMinBudget = (e) => {\n//         setMinBudget(parseFloat(e.target.value))\n//     };\n//     const onChangeMaxBudget = (e) => {\n//         setMaxBudget(parseFloat(e.target.value))\n//     };\n\n//     const handleAnalysis = (e) => {\n//         e.preventDefault();\n//         localStorage.setItem('filter', JSON.stringify({\n//             \"categories\": categories,\n//             \"locations\": locations,\n//             \"minBudget\": minBudget,\n//             \"maxBudget\": maxBudget\n//         }));\n//         window.location.reload();\n\n//     }\n//     const handleReset = (e) => {\n//         e.preventDefault();\n//         localStorage.setItem('filter', JSON.stringify({\n//             \"categories\": [],\n//             \"locations\": [],\n//             \"minBudget\": 0.00,\n//             \"maxBudget\": 0.00\n//         }));\n//         window.location.reload();\n\n//     }\n    \n//     useEffect(() => {\n//         getCategories();\n//         getLocations();\n//     }, []);\n\n//     return (\n//         <section>\n//             <div className=\"budget-analysis-container\">\n//                 <div>\n//                     <h4 className=\"main-caption\"><b>Budget Analysis</b></h4>\n//                 </div>\n//                 <form className=\"nest-form\" onSubmit={handleAnalysis}>\n//                     <div className=\"row form-category\">\n\n                       \n//                         <div className=\"form-group col-md-12\">\n//                             <label htmlFor=\"inputPassword4\">Location</label>\n//                             <Select options={selectLocations} onChange={onChangeSelectLocation} placeholder=\"Phnom Penh, Kompot...\" required/>\n//                         </div>\n                        \n//                     </div>\n//                     <div className=\"row form-budget\">\n\n//                         <div className=\"form-group col-md-6\">\n//                             <label htmlFor=\"inputEmail4\">Min-Budget ($)</label>\n//                             <div className=\"input-container\">\n//                                 <input className=\"input-input\" min=\"0\" type=\"number\" value={minBudget} onChange={onChangeMinBudget} placeholder=\"Mininum Budget...\"/>\n//                             </div>\n//                         </div>\n//                         <div className=\"form-group col-md-6\">\n//                             <label htmlFor=\"inputEmail4\">Max-Budget ($)</label>\n//                             <div className=\"input-container\">\n//                                 <input className=\"input-input\" min=\"0\" type=\"number\" value={maxBudget} onChange={onChangeMaxBudget} placeholder=\"Maxinum Budget...\" required />\n//                             </div>\n//                         </div>\n                        \n//                     </div>\n                    \n//                     <span className='span-analysis-button'>\n//                         <button type=\"submit\" className=\"btn btn-primary analysis-button\">\n//                             Analysis\n//                         </button>\n//                     </span>\n//                     <span className='span-analysis-button'>\n//                         <button type=\"button\" className=\"btn btn-secondary\" onClick={handleReset}>\n//                             Reset\n//                         </button>\n//                     </span>\n//                 </form>\n\n//             </div>\n//         </section>\n//     );\n// };\n\n// export default BudgetAnalyzer;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,cAAc;AACjC,SAASC,WAAW,QAAQ,kBAAkB;AAE9C,OAAOC,CAAC,MAAM,QAAQ;AAEtB,OAAO,4BAA4B;;AAEnC;AACA,OAAOC,cAAc,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,IAAIC,MAAM,GAAGC,OAAO,CAAC,cAAc,CAAC;AAEpC,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAMC,QAAQ,GAAGT,WAAW,CAAC,CAAC;;EAE9B;EACA,MAAM,CAACU,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC5D,MAAM,CAACe,eAAe,EAAEC,kBAAkB,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;;EAE1D;EACA,MAAM,CAACiB,UAAU,EAAEC,aAAa,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACmB,SAAS,EAAEC,YAAY,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;;EAE9C;EACA,MAAM,CAACqB,SAAS,EAAEC,YAAY,CAAC,GAAGtB,QAAQ,CAAC,GAAG,CAAC;EAC/C,MAAM,CAACuB,SAAS,EAAEC,YAAY,CAAC,GAAGxB,QAAQ,CAAC,GAAG,CAAC;;EAE/C;EACA,SAASyB,YAAYA,CAAA,EAAG;IACtBrB,CAAC,CAACsB,IAAI,CAAC;MACLC,GAAG,EAAG,GAAEnB,MAAM,CAACoB,EAAG,IAAGpB,MAAM,CAACqB,IAAK,qBAAoB;MACrDC,IAAI,EAAE,KAAK;MACXC,QAAQ,EAAE,MAAM;MAChBC,OAAO,EAAE,SAAAA,CAAUC,QAAQ,EAAE;QAC3B;QACAjB,kBAAkB,CAACiB,QAAQ,CAACC,SAAS,CAAC;MACxC,CAAC;MACDC,KAAK,EAAE,SAAAA,CAAUA,KAAK,EAAE;QACtBC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACnD;IACF,CAAC,CAAC;EACJ;;EAEA;EACA,SAASE,aAAaA,CAAA,EAAG;IACvB;IACA,MAAMC,OAAO,GAAGjC,cAAc,CAACkC,GAAG,CAACC,GAAG,KAAK;MACzCC,KAAK,EAAED,GAAG,CAACE,EAAE;MACbC,KAAK,EAAEH,GAAG,CAACI;IACb,CAAC,CAAC,CAAC;IACH9B,mBAAmB,CAACwB,OAAO,CAAC;EAC9B;;EAEA;EACA,MAAMO,sBAAsB,GAAIC,CAAC,IAAK;IACpC;IACA5B,aAAa,CAAC,CAAC4B,CAAC,CAACL,KAAK,EAAEK,CAAC,CAACH,KAAK,CAAC,CAAC;EACnC,CAAC;EAED,MAAMI,sBAAsB,GAAID,CAAC,IAAK;IACpC1B,YAAY,CAAC,CAAC0B,CAAC,CAACL,KAAK,EAAEK,CAAC,CAACH,KAAK,CAAC,CAAC;EAClC,CAAC;;EAED;EACA,MAAMK,iBAAiB,GAAIF,CAAC,IAAKxB,YAAY,CAAC2B,UAAU,CAACH,CAAC,CAACI,MAAM,CAACT,KAAK,CAAC,IAAI,CAAC,CAAC;EAC9E,MAAMU,iBAAiB,GAAIL,CAAC,IAAKtB,YAAY,CAACyB,UAAU,CAACH,CAAC,CAACI,MAAM,CAACT,KAAK,CAAC,IAAI,CAAC,CAAC;;EAE9E;EACA,MAAMW,cAAc,GAAIN,CAAC,IAAK;IAC5BA,CAAC,CAACO,cAAc,CAAC,CAAC;IAClBC,YAAY,CAACC,OAAO,CAClB,QAAQ,EACRC,IAAI,CAACC,SAAS,CAAC;MACbxC,UAAU;MACVE,SAAS;MACTE,SAAS;MACTE;IACF,CAAC,CACH,CAAC;IACDmC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC;EAC1B,CAAC;;EAED;EACA,MAAMC,WAAW,GAAIf,CAAC,IAAK;IACzBA,CAAC,CAACO,cAAc,CAAC,CAAC;IAClBC,YAAY,CAACC,OAAO,CAClB,QAAQ,EACRC,IAAI,CAACC,SAAS,CAAC;MACbxC,UAAU,EAAE,EAAE;MACdE,SAAS,EAAE,EAAE;MACbE,SAAS,EAAE,GAAG;MACdE,SAAS,EAAE;IACb,CAAC,CACH,CAAC;IACDmC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC;EAC1B,CAAC;;EAED;EACA3D,SAAS,CAAC,MAAM;IACdoC,aAAa,CAAC,CAAC;IACfZ,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACElB,OAAA;IAAAuD,QAAA,eACEvD,OAAA;MAAKwD,SAAS,EAAC,2BAA2B;MAAAD,QAAA,gBACxCvD,OAAA;QAAAuD,QAAA,eACEvD,OAAA;UAAIwD,SAAS,EAAC,cAAc;UAAAD,QAAA,eAACvD,OAAA;YAAAuD,QAAA,EAAG;UAAe;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrD,CAAC,eACN5D,OAAA;QAAMwD,SAAS,EAAC,WAAW;QAACK,QAAQ,EAAEhB,cAAe;QAAAU,QAAA,gBACnDvD,OAAA;UAAKwD,SAAS,EAAC,mBAAmB;UAAAD,QAAA,eAWhCvD,OAAA;YAAKwD,SAAS,EAAC,sBAAsB;YAAAD,QAAA,gBACnCvD,OAAA;cAAO8D,OAAO,EAAC,eAAe;cAAAP,QAAA,EAAC;YAAQ;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eAC/C5D,OAAA,CAACL,MAAM;cACLoC,OAAO,EAAEvB,eAAgB;cACzBuD,QAAQ,EAAEvB,sBAAuB;cACjCwB,WAAW,EAAC,uBAAuB;cACnCC,QAAQ;YAAA;cAAAR,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACT,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eAEN5D,OAAA;UAAKwD,SAAS,EAAC,iBAAiB;UAAAD,QAAA,gBAC9BvD,OAAA;YAAKwD,SAAS,EAAC,qBAAqB;YAAAD,QAAA,gBAClCvD,OAAA;cAAO8D,OAAO,EAAC,gBAAgB;cAAAP,QAAA,EAAC;YAAc;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eACtD5D,OAAA;cAAKwD,SAAS,EAAC,iBAAiB;cAAAD,QAAA,eAC9BvD,OAAA;gBACEwD,SAAS,EAAC,aAAa;gBACvBU,GAAG,EAAC,GAAG;gBACP3C,IAAI,EAAC,QAAQ;gBACbW,KAAK,EAAEpB,SAAU;gBACjBiD,QAAQ,EAAEtB,iBAAkB;gBAC5BuB,WAAW,EAAC;cAAmB;gBAAAP,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAChC;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACC,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,eACN5D,OAAA;YAAKwD,SAAS,EAAC,qBAAqB;YAAAD,QAAA,gBAClCvD,OAAA;cAAO8D,OAAO,EAAC,gBAAgB;cAAAP,QAAA,EAAC;YAAc;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eACtD5D,OAAA;cAAKwD,SAAS,EAAC,iBAAiB;cAAAD,QAAA,eAC9BvD,OAAA;gBACEwD,SAAS,EAAC,aAAa;gBACvBU,GAAG,EAAC,GAAG;gBACP3C,IAAI,EAAC,QAAQ;gBACbW,KAAK,EAAElB,SAAU;gBACjB+C,QAAQ,EAAEnB,iBAAkB;gBAC5BoB,WAAW,EAAC,mBAAmB;gBAC/BC,QAAQ;cAAA;gBAAAR,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACT;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACC,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eAEN5D,OAAA;UAAMwD,SAAS,EAAC,sBAAsB;UAAAD,QAAA,eACpCvD,OAAA;YAAQuB,IAAI,EAAC,QAAQ;YAACiC,SAAS,EAAC,iCAAiC;YAAAD,QAAA,EAAC;UAElE;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC,eACP5D,OAAA;UAAMwD,SAAS,EAAC,sBAAsB;UAAAD,QAAA,eACpCvD,OAAA;YAAQuB,IAAI,EAAC,QAAQ;YAACiC,SAAS,EAAC,mBAAmB;YAACW,OAAO,EAAEb,WAAY;YAAAC,QAAA,EAAC;UAE1E;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEd,CAAC;AAACxD,EAAA,CApKID,cAAc;EAAA,QACDP,WAAW;AAAA;AAAAwE,EAAA,GADxBjE,cAAc;AAsKpB,eAAeA,cAAc;;AAK7B;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AAAA,IAAAiE,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}